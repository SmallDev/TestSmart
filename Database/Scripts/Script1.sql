SET NOCOUNT ON

MERGE INTO [Settings] AS Target
USING (VALUES
  ('AllTime','00:40:00')
 ,('CalcTime','0:10:00')
 ,('ReadTime','0:30:00')
 ,('ReadVelocity','6.0')
) AS Source ([Name],[Value])
ON (Target.[Name] = Source.[Name])
WHEN MATCHED AND (
	NULLIF(Source.[Value], Target.[Value]) IS NOT NULL OR NULLIF(Target.[Value], Source.[Value]) IS NOT NULL) THEN
 UPDATE SET
  [Value] = Source.[Value]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Name],[Value])
 VALUES(Source.[Name],Source.[Value])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE
;
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [Settings]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[Settings] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET NOCOUNT OFF
GO

SET NOCOUNT ON

SET IDENTITY_INSERT [Cluster] ON

MERGE INTO [Cluster] AS Target
USING (VALUES
  (1,'"')
 ,(2,'"')
 ,(3,'"')
 ,(4,'"')
) AS Source ([Id],[Name])
ON (Target.[Id] = Source.[Id])
WHEN MATCHED AND (
	NULLIF(Source.[Name], Target.[Name]) IS NOT NULL OR NULLIF(Target.[Name], Source.[Name]) IS NOT NULL) THEN
 UPDATE SET
  [Name] = Source.[Name]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Id],[Name])
 VALUES(Source.[Id],Source.[Name])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE
;
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [Cluster]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[Cluster] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET IDENTITY_INSERT [Cluster] OFF
GO
SET NOCOUNT OFF
GO

SET NOCOUNT ON

MERGE INTO [ClusterProfile] AS Target
USING (VALUES
  (1,1,1,4.267997885727139e-008,NULL,NULL)
 ,(1,1,2,1.540329405659221e-005,NULL,NULL)
 ,(1,1,3,9.999845538004517e-001,NULL,NULL)
 ,(1,1,4,7.966361163436878e-015,NULL,NULL)
 ,(1,1,5,4.461645107734133e-011,NULL,NULL)
 ,(1,1,6,1.809048635353833e-010,NULL,NULL)
 ,(1,2,7,3.976336230548652e-001,NULL,NULL)
 ,(1,2,8,9.999999892986994e-001,NULL,NULL)
 ,(1,2,9,1.070132683977344e-008,NULL,NULL)
 ,(2,1,1,7.899634643352728e-005,NULL,NULL)
 ,(2,1,2,1.158654082245906e-002,NULL,NULL)
 ,(2,1,3,1.302607866444298e-001,NULL,NULL)
 ,(2,1,4,8.401278398111065e-001,NULL,NULL)
 ,(2,1,5,8.366169494431815e-003,NULL,NULL)
 ,(2,1,6,9.579666881119865e-003,NULL,NULL)
 ,(2,2,7,1.439632409679890e-001,NULL,NULL)
 ,(2,2,8,1.832076106193915e-002,NULL,NULL)
 ,(2,2,9,9.816792389380453e-001,NULL,NULL)
 ,(3,1,1,8.993637829787307e-011,NULL,NULL)
 ,(3,1,2,6.671901846839562e-006,NULL,NULL)
 ,(3,1,3,7.510845665672624e-006,NULL,NULL)
 ,(3,1,4,9.992351971904145e-001,NULL,NULL)
 ,(3,1,5,6.029011256273798e-004,NULL,NULL)
 ,(3,1,6,1.477188465087965e-004,NULL,NULL)
 ,(3,2,7,4.093749703007520e-001,NULL,NULL)
 ,(3,2,8,2.600054791888858e-006,NULL,NULL)
 ,(3,2,9,9.999973999451695e-001,NULL,NULL)
 ,(4,1,1,1.116029313317694e-002,NULL,NULL)
 ,(4,1,2,1.675891040710279e-002,NULL,NULL)
 ,(4,1,3,4.661764579370865e-001,NULL,NULL)
 ,(4,1,4,2.857920931372668e-013,NULL,NULL)
 ,(4,1,5,2.496322968056310e-001,NULL,NULL)
 ,(4,1,6,2.562720417167121e-001,NULL,NULL)
 ,(4,2,7,7.215806152687448e-001,NULL,NULL)
 ,(4,2,8,9.999968873429691e-001,NULL,NULL)
 ,(4,2,9,3.112656964705129e-006,NULL,NULL)
) AS Source ([ClusterId],[PropertyId],[NominalId],[Probability],[Average],[Variance])
ON (Target.[ClusterId] = Source.[ClusterId] AND Target.[NominalId] = Source.[NominalId] AND Target.[PropertyId] = Source.[PropertyId])
WHEN MATCHED AND (
	NULLIF(Source.[Probability], Target.[Probability]) IS NOT NULL OR NULLIF(Target.[Probability], Source.[Probability]) IS NOT NULL OR 
	NULLIF(Source.[Average], Target.[Average]) IS NOT NULL OR NULLIF(Target.[Average], Source.[Average]) IS NOT NULL OR 
	NULLIF(Source.[Variance], Target.[Variance]) IS NOT NULL OR NULLIF(Target.[Variance], Source.[Variance]) IS NOT NULL) THEN
 UPDATE SET
  [Probability] = Source.[Probability], 
  [Average] = Source.[Average], 
  [Variance] = Source.[Variance]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([ClusterId],[PropertyId],[NominalId],[Probability],[Average],[Variance])
 VALUES(Source.[ClusterId],Source.[PropertyId],Source.[NominalId],Source.[Probability],Source.[Average],Source.[Variance])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE
;
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [ClusterProfile]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[ClusterProfile] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET NOCOUNT OFF
GO

SET NOCOUNT ON

SET IDENTITY_INSERT [User] ON

MERGE INTO [User] AS Target
USING (VALUES
  (1,'1c:bb:a8:05:35:ac')
 ,(2,'00:1a:79:01:da:25')
 ,(3,'00:1a:79:14:61:02')
 ,(4,'e4:27:71:0c:e4:78')
 ,(5,'00:02:9b:9f:bb:7b')
 ,(6,'00:07:67:9b:03:ba')
 ,(7,'00:1a:79:02:4b:36')
 ,(8,'00:1a:79:0c:15:73')
 ,(9,'00:1a:79:03:af:6d')
 ,(10,'00:1a:79:14:06:58')
 ,(11,'e4:27:71:0c:05:63')
 ,(12,'e4:27:71:40:37:93')
 ,(13,'1c:bb:a8:00:cb:04')
 ,(14,'e4:27:71:40:3c:c5')
 ,(15,'e4:27:71:45:ac:61')
 ,(16,'1c:bb:a8:00:1e:0e')
 ,(17,'00:1a:79:14:08:85')
 ,(18,'00:fa:e0:fb:81:56')
 ,(19,'1c:bb:a8:00:50:e6')
 ,(20,'1c:bb:a8:00:8c:b9')
 ,(21,'e4:27:71:0d:02:6d')
 ,(22,'e4:27:71:08:9e:58')
 ,(23,'e4:27:71:45:36:d4')
 ,(24,'e4:27:71:45:cd:4d')
 ,(25,'1c:bb:a8:00:6d:08')
 ,(26,'e4:27:71:08:60:03')
 ,(27,'e4:27:71:41:a3:dd')
 ,(28,'e4:27:71:08:66:53')
 ,(29,'1c:bb:a8:01:77:38')
 ,(30,'e4:27:71:46:f4:0b')
 ,(31,'e4:27:71:0c:94:57')
 ,(32,'e4:27:71:43:57:76')
 ,(33,'00:1a:79:1f:f9:ba')
 ,(34,'00:1a:79:00:e0:50')
 ,(35,'1c:bb:a8:02:a7:65')
 ,(36,'00:1a:79:02:b8:31')
 ,(37,'00:07:67:9b:15:6b')
 ,(38,'00:1a:79:01:6e:bb')
 ,(39,'00:1a:79:01:dc:bb')
 ,(40,'00:1a:79:1f:f2:f3')
 ,(41,'00:1a:79:16:9b:16')
 ,(42,'00:1a:79:0c:43:05')
 ,(43,'1c:bb:a8:01:b1:6a')
 ,(44,'1c:bb:a8:01:de:88')
 ,(45,'00:1a:79:14:07:ce')
 ,(46,'e4:27:71:45:8c:1b')
 ,(47,'00:1a:79:16:96:bc')
 ,(48,'00:1a:79:22:19:01')
 ,(49,'e4:27:71:08:98:5e')
 ,(50,'00:1a:79:01:ee:59')
 ,(51,'e4:27:71:07:f0:59')
 ,(52,'00:07:67:9b:27:42')
 ,(53,'e4:27:71:45:0e:96')
 ,(54,'00:1a:79:00:68:cc')
 ,(55,'00:1a:79:0c:17:17')
 ,(56,'1c:bb:a8:00:48:8a')
 ,(57,'00:1a:79:22:7c:a7')
 ,(58,'1c:bb:a8:02:ef:50')
 ,(59,'00:1a:79:02:d4:55')
 ,(60,'e4:27:71:41:4a:0e')
 ,(61,'00:1a:79:00:7f:74')
 ,(62,'00:1a:79:14:6c:3a')
 ,(63,'e4:27:71:0c:95:25')
 ,(64,'00:1a:79:16:ca:df')
 ,(65,'00:02:9b:9f:d1:96')
 ,(66,'e4:27:71:04:f7:c2')
 ,(67,'e4:27:71:41:35:b2')
 ,(68,'00:1a:79:14:0a:77')
 ,(69,'e4:27:71:46:6f:51')
 ,(70,'00:1a:79:12:f4:6a')
 ,(71,'e4:27:71:46:e9:d2')
 ,(72,'e4:27:71:09:6a:3e')
 ,(73,'00:1a:79:23:d9:92')
 ,(74,'1c:bb:a8:02:e0:8f')
 ,(75,'e4:27:71:40:40:0c')
 ,(76,'1c:bb:a8:01:1e:3f')
 ,(77,'e4:27:71:45:8d:85')
 ,(78,'e4:27:71:08:9e:bd')
 ,(79,'e4:27:71:07:ef:e4')
 ,(80,'e4:27:71:46:5c:f8')
 ,(81,'00:1a:79:1f:fc:25')
 ,(82,'00:1a:79:03:1e:01')
 ,(83,'00:02:9b:9f:c8:69')
 ,(84,'e4:27:71:45:93:06')
 ,(85,'e4:27:71:41:b2:99')
 ,(86,'00:1a:79:01:b1:ee')
 ,(87,'00:1a:79:00:94:98')
 ,(88,'1c:bb:a8:00:dd:73')
 ,(89,'00:1a:79:16:a5:70')
 ,(90,'00:1a:79:23:ef:2a')
 ,(91,'1c:bb:a8:00:9f:e5')
 ,(92,'e4:27:71:0c:e6:0c')
 ,(93,'00:1a:79:24:00:c2')
 ,(94,'e4:27:71:45:85:f6')
 ,(95,'00:02:9b:9e:c4:fe')
 ,(96,'e4:27:71:0c:0c:12')
 ,(97,'e4:27:71:46:40:57')
 ,(98,'00:1a:79:24:4f:2e')
 ,(99,'00:1a:79:02:8e:94')
 ,(100,'e4:27:71:41:46:33')
) AS Source ([Id],[Mac])
ON (Target.[Id] = Source.[Id])
WHEN MATCHED AND (
	NULLIF(Source.[Mac], Target.[Mac]) IS NOT NULL OR NULLIF(Target.[Mac], Source.[Mac]) IS NOT NULL) THEN
 UPDATE SET
  [Mac] = Source.[Mac]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([Id],[Mac])
 VALUES(Source.[Id],Source.[Mac])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE
;
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [User]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[User] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET IDENTITY_INSERT [User] OFF
GO
SET NOCOUNT OFF
GO

SET NOCOUNT ON

MERGE INTO [UserProfile] AS Target
USING (VALUES
  (1,1,1.061143234448788e-001)
 ,(2,1,2.413915643926438e-016)
 ,(3,1,9.233335059988028e-001)
 ,(4,1,5.841304515688448e-001)
 ,(5,1,9.016071381026233e-001)
 ,(6,1,8.956141142364453e-001)
 ,(7,1,7.587619808670945e-001)
 ,(8,1,4.935107495956932e-014)
 ,(9,1,6.522326756076727e-001)
 ,(10,1,7.676208870577204e-001)
 ,(11,1,2.893373192416312e-015)
 ,(12,1,1.455126183918053e-014)
 ,(13,1,7.027276512479156e-001)
 ,(14,1,5.996837451010866e-001)
 ,(15,1,7.363014935717379e-001)
 ,(16,1,6.942260025901064e-001)
 ,(17,1,9.802421009427940e-016)
 ,(18,1,3.947522926493113e-002)
 ,(19,1,1.610749524878941e-015)
 ,(20,1,5.021640360878056e-015)
 ,(21,1,8.097880222629188e-001)
 ,(22,1,6.516888275414086e-015)
 ,(23,1,5.042141483805127e-001)
 ,(24,1,2.072110113634012e-001)
 ,(25,1,3.677670808254695e-001)
 ,(26,1,7.831996994893679e-001)
 ,(27,1,5.080969268406918e-016)
 ,(28,1,4.460955829191483e-001)
 ,(29,1,6.573182858678280e-001)
 ,(30,1,4.511020216989303e-015)
 ,(31,1,6.722553330958390e-001)
 ,(32,1,8.767802599995472e-001)
 ,(33,1,7.860758826518772e-001)
 ,(34,1,9.704216480871103e-015)
 ,(35,1,9.215606098884553e-001)
 ,(36,1,9.287390343925939e-001)
 ,(37,1,4.526553401524460e-001)
 ,(38,1,9.524619867968148e-001)
 ,(39,1,7.869468656416969e-001)
 ,(40,1,7.304867552976370e-001)
 ,(41,1,2.262943144335431e-014)
 ,(42,1,7.369398373202191e-001)
 ,(43,1,4.323286478397440e-001)
 ,(44,1,6.016134519633897e-001)
 ,(45,1,8.534958295204655e-001)
 ,(46,1,5.906393031317477e-001)
 ,(47,1,3.108076790572177e-003)
 ,(48,1,5.404731011216054e-001)
 ,(49,1,7.775573420060982e-016)
 ,(50,1,3.306449148010058e-014)
 ,(51,1,1.322159147625769e-014)
 ,(52,1,5.458977227807959e-001)
 ,(53,1,9.078980507237221e-001)
 ,(54,1,8.712322563442214e-001)
 ,(55,1,8.708017485021946e-001)
 ,(56,1,7.392079229951888e-015)
 ,(57,1,5.341722270428335e-001)
 ,(58,1,4.260899504755686e-001)
 ,(59,1,6.703805684751976e-001)
 ,(60,1,9.326212914865188e-001)
 ,(61,1,9.639781324588084e-001)
 ,(62,1,7.137205770365183e-001)
 ,(63,1,7.108343166658075e-001)
 ,(64,1,9.726494077766401e-001)
 ,(65,1,3.287872547660883e-015)
 ,(66,1,5.998293874463221e-015)
 ,(67,1,5.609712380273453e-001)
 ,(68,1,7.699966595311850e-001)
 ,(69,1,9.297925054290495e-001)
 ,(70,1,7.302433807360932e-001)
 ,(71,1,3.191864640768081e-001)
 ,(72,1,6.762079523321294e-001)
 ,(73,1,7.104554567567843e-001)
 ,(74,1,8.738222929088091e-001)
 ,(75,1,1.366444251940980e-001)
 ,(76,1,5.294344980777874e-015)
 ,(77,1,3.065244714409362e-016)
 ,(78,1,8.653629342723686e-002)
 ,(79,1,9.281295487573801e-001)
 ,(80,1,1.859268975663991e-001)
 ,(81,1,7.855287912592588e-001)
 ,(82,1,5.586470164700772e-015)
 ,(83,1,6.398224281315708e-001)
 ,(84,1,8.376142063739648e-001)
 ,(85,1,3.787413986923131e-001)
 ,(86,1,8.232188161319900e-001)
 ,(87,1,6.146184474922939e-001)
 ,(88,1,9.244277538303917e-001)
 ,(89,1,6.568662478130800e-015)
 ,(90,1,1.639881354223021e-015)
 ,(91,1,4.779817437679044e-001)
 ,(92,1,4.336802078342577e-001)
 ,(93,1,3.849630242059436e-001)
 ,(94,1,8.585751285362527e-001)
 ,(95,1,6.382226240872201e-001)
 ,(96,1,8.321528755376029e-001)
 ,(97,1,9.851328740020667e-016)
 ,(98,1,7.254088493819981e-001)
 ,(99,1,3.703322482203460e-015)
 ,(100,1,1.686904649057811e-014)
 ,(1,2,2.874782415154263e-002)
 ,(2,2,4.642972606876006e-001)
 ,(3,2,2.963743121249118e-002)
 ,(4,2,1.321936022842523e-002)
 ,(5,2,1.096735483163708e-002)
 ,(6,2,9.039990912273322e-003)
 ,(7,2,1.616262595218227e-002)
 ,(8,2,4.824736065187532e-001)
 ,(9,2,3.528380576633258e-002)
 ,(10,2,9.305292186440418e-003)
 ,(11,2,4.624088925891364e-001)
 ,(12,2,1.306240914000978e-001)
 ,(13,2,1.591521268822544e-002)
 ,(14,2,5.189992713992100e-002)
 ,(15,2,7.189541433820258e-003)
 ,(16,2,4.013865049789990e-003)
 ,(17,2,2.154252465995021e-001)
 ,(18,2,1.635323625893005e-001)
 ,(19,2,4.301355421336110e-001)
 ,(20,2,3.566662539927443e-001)
 ,(21,2,8.268249447532343e-003)
 ,(22,2,4.594891571549177e-001)
 ,(23,2,1.016033559250081e-002)
 ,(24,2,5.691150856625625e-002)
 ,(25,2,5.527084450171219e-001)
 ,(26,2,1.993286686493451e-003)
 ,(27,2,8.640785603411996e-001)
 ,(28,2,1.052044645885885e-002)
 ,(29,2,1.403331524920718e-003)
 ,(30,2,5.940164033097802e-001)
 ,(31,2,3.444053357670711e-004)
 ,(32,2,1.335710121516482e-002)
 ,(33,2,5.241930249919437e-003)
 ,(34,2,9.510439920893155e-001)
 ,(35,2,1.106438362630955e-003)
 ,(36,2,1.117755870872165e-002)
 ,(37,2,4.482269649966197e-003)
 ,(38,2,1.941859405116581e-002)
 ,(39,2,1.048621749551913e-002)
 ,(40,2,7.809907018617862e-003)
 ,(41,2,4.272239989084904e-002)
 ,(42,2,1.492618810779899e-003)
 ,(43,2,3.456497161463987e-003)
 ,(44,2,1.097315595111601e-002)
 ,(45,2,5.280900301531287e-004)
 ,(46,2,1.224743628083786e-004)
 ,(47,2,3.055732142965213e-002)
 ,(48,2,1.248496165555021e-002)
 ,(49,2,9.799230560763390e-001)
 ,(50,2,3.497765037352434e-001)
 ,(51,2,1.764804356468522e-001)
 ,(52,2,5.107388562876033e-003)
 ,(53,2,3.209576061930535e-003)
 ,(54,2,5.178779523162628e-003)
 ,(55,2,3.037252528387264e-002)
 ,(56,2,5.298663583286202e-001)
 ,(57,2,9.509200484236982e-002)
 ,(58,2,2.150666218582324e-001)
 ,(59,2,7.516995493506295e-003)
 ,(60,2,6.910247181948426e-003)
 ,(61,2,1.157901325655141e-002)
 ,(62,2,1.210881787250513e-002)
 ,(63,2,2.579008394353786e-002)
 ,(64,2,1.153321225998632e-002)
 ,(65,2,2.366459227450434e-001)
 ,(66,2,6.863203146848034e-001)
 ,(67,2,1.835982651541366e-002)
 ,(68,2,9.215422185163295e-003)
 ,(69,2,6.933643365612339e-003)
 ,(70,2,5.666609634583518e-005)
 ,(71,2,5.120424019786115e-001)
 ,(72,2,5.062824484797556e-003)
 ,(73,2,6.090625125800214e-004)
 ,(74,2,1.177657919237286e-002)
 ,(75,2,2.117677258885627e-001)
 ,(76,2,1.428579255995372e-001)
 ,(77,2,7.591372891140289e-001)
 ,(78,2,5.285707848039105e-004)
 ,(79,2,1.556146895192924e-002)
 ,(80,2,1.537694805202876e-001)
 ,(81,2,2.778646225022038e-003)
 ,(82,2,5.131874943758730e-001)
 ,(83,2,7.512890704386517e-004)
 ,(84,2,6.183415368003672e-003)
 ,(85,2,3.641711756751526e-001)
 ,(86,2,3.476723956129715e-002)
 ,(87,2,6.778181713302484e-003)
 ,(88,2,1.084387300851881e-002)
 ,(89,2,5.665699834110601e-001)
 ,(90,2,3.488772126493237e-001)
 ,(91,2,6.022318542006526e-003)
 ,(92,2,1.046390848930429e-002)
 ,(93,2,7.758330183028484e-003)
 ,(94,2,6.318985762222924e-003)
 ,(95,2,9.071891967824179e-003)
 ,(96,2,1.403534966362065e-002)
 ,(97,2,4.500624145510735e-001)
 ,(98,2,9.679139080735703e-003)
 ,(99,2,1.086086622584800e-001)
 ,(100,2,5.583457056588039e-001)
 ,(1,3,1.012429529344187e-009)
 ,(2,3,5.357027392071369e-001)
 ,(3,3,7.366010128079377e-009)
 ,(4,3,1.005099772462631e-009)
 ,(5,3,2.243191155032044e-009)
 ,(6,3,2.072208464111697e-009)
 ,(7,3,5.832986977190768e-010)
 ,(8,3,5.175263915251258e-001)
 ,(9,3,3.267995756763912e-009)
 ,(10,3,2.409771524765183e-010)
 ,(11,3,5.375911072677607e-001)
 ,(12,3,8.693759081240576e-001)
 ,(13,3,2.659229412855864e-009)
 ,(14,3,4.473563983342491e-009)
 ,(15,3,1.234070197988920e-009)
 ,(16,3,1.404884388178404e-009)
 ,(17,3,7.845747532738150e-001)
 ,(18,3,1.057324546780581e-001)
 ,(19,3,5.698644576912344e-001)
 ,(20,3,6.433337459164824e-001)
 ,(21,3,2.851963567466531e-010)
 ,(22,3,5.405108427086259e-001)
 ,(23,3,5.852212174042452e-010)
 ,(24,3,4.002243424169891e-010)
 ,(25,3,6.461640485067696e-002)
 ,(26,3,1.743210858009852e-009)
 ,(27,3,1.359214396158543e-001)
 ,(28,3,3.457240681751091e-010)
 ,(29,3,1.341720255195124e-009)
 ,(30,3,4.059835966812991e-001)
 ,(31,3,4.302299183683181e-010)
 ,(32,3,9.946320525780314e-010)
 ,(33,3,2.047150619084717e-009)
 ,(34,3,4.895600779394028e-002)
 ,(35,3,1.046770548570554e-010)
 ,(36,3,3.935915945950691e-010)
 ,(37,3,3.525316274108508e-009)
 ,(38,3,5.679806177292979e-009)
 ,(39,3,1.051925479054330e-009)
 ,(40,3,2.157945868267045e-009)
 ,(41,3,9.572775996678342e-001)
 ,(42,3,7.114371440397487e-010)
 ,(43,3,6.667700629851277e-009)
 ,(44,3,1.464946283519448e-009)
 ,(45,3,8.344845783027401e-011)
 ,(46,3,2.869862978271511e-010)
 ,(47,3,6.249856558999114e-009)
 ,(48,3,8.139402972566597e-010)
 ,(49,3,2.007694348015017e-002)
 ,(50,3,6.502234951668175e-001)
 ,(51,3,8.235195642035057e-001)
 ,(52,3,1.725293293672345e-009)
 ,(53,3,1.941643582996023e-009)
 ,(54,3,3.254282392905750e-010)
 ,(55,3,3.790385671752929e-009)
 ,(56,3,4.701336416289141e-001)
 ,(57,3,1.682163735936130e-008)
 ,(58,3,3.349658762547133e-001)
 ,(59,3,1.542170171992756e-010)
 ,(60,3,7.804975348287525e-010)
 ,(61,3,9.070536815318161e-011)
 ,(62,3,5.306062484539020e-010)
 ,(63,3,1.051887127782943e-009)
 ,(64,3,5.680273203047731e-010)
 ,(65,3,7.633540769913738e-001)
 ,(66,3,3.136796850289081e-001)
 ,(67,3,1.752860857310116e-009)
 ,(68,3,9.146981941914724e-010)
 ,(69,3,4.896064290051743e-010)
 ,(70,3,2.250670753199112e-010)
 ,(71,3,1.107885071221741e-001)
 ,(72,3,2.366386338765032e-010)
 ,(73,3,1.035379474429235e-009)
 ,(74,3,1.818559980264185e-009)
 ,(75,3,1.074488510228333e-001)
 ,(76,3,8.571420740908100e-001)
 ,(77,3,2.408627106586811e-001)
 ,(78,3,1.590528879445256e-005)
 ,(79,3,4.944434827455828e-009)
 ,(80,3,6.476783982612357e-002)
 ,(81,3,1.473484847873735e-010)
 ,(82,3,4.868125052170489e-001)
 ,(83,3,2.474529672054108e-009)
 ,(84,3,2.359202067497477e-009)
 ,(85,3,2.188452216297649e-001)
 ,(86,3,1.055534878257004e-008)
 ,(87,3,1.682025210824640e-009)
 ,(88,3,1.693728182945571e-009)
 ,(89,3,4.334300164011979e-001)
 ,(90,3,6.511227872033023e-001)
 ,(91,3,3.984836358571747e-009)
 ,(92,3,7.188946587712753e-009)
 ,(93,3,1.653926312523919e-010)
 ,(94,3,3.377498888747482e-009)
 ,(95,3,1.488980094143725e-009)
 ,(96,3,3.008503083905605e-009)
 ,(97,3,5.499375851927046e-001)
 ,(98,3,1.669621498486753e-009)
 ,(99,3,8.913913375078567e-001)
 ,(100,3,4.416542940821915e-001)
 ,(1,4,8.651378513911492e-001)
 ,(2,4,1.052624420946528e-010)
 ,(3,4,4.702905542269592e-002)
 ,(4,4,4.026501871976303e-001)
 ,(5,4,8.742550482254864e-002)
 ,(6,4,9.534589277907291e-002)
 ,(7,4,2.250753925974246e-001)
 ,(8,4,1.956071524767563e-009)
 ,(9,4,3.124835153579991e-001)
 ,(10,4,2.230738205148621e-001)
 ,(11,4,1.430997561949195e-010)
 ,(12,4,4.758302238535237e-010)
 ,(13,4,2.813571334046296e-001)
 ,(14,4,3.484163232854285e-001)
 ,(15,4,2.565089637603716e-001)
 ,(16,4,3.017601309552194e-001)
 ,(17,4,1.266819894260857e-010)
 ,(18,4,6.912599534677103e-001)
 ,(19,4,1.751529684606925e-010)
 ,(20,4,9.076826149744642e-011)
 ,(21,4,1.819437280043524e-001)
 ,(22,4,1.364498082713776e-010)
 ,(23,4,4.856255154417652e-001)
 ,(24,4,7.358774796701182e-001)
 ,(25,4,1.490806930673172e-002)
 ,(26,4,2.148070120809280e-001)
 ,(27,4,4.294548996172101e-011)
 ,(28,4,5.433839702762687e-001)
 ,(29,4,3.412783812655312e-001)
 ,(30,4,8.916257301085364e-012)
 ,(31,4,3.274002611381641e-001)
 ,(32,4,1.098626377906559e-001)
 ,(33,4,2.086821850510527e-001)
 ,(34,4,1.167346618594318e-010)
 ,(35,4,7.733295164423659e-002)
 ,(36,4,6.008340650509302e-002)
 ,(37,4,5.428623866722715e-001)
 ,(38,4,2.811941347221317e-002)
 ,(39,4,2.025669158108585e-001)
 ,(40,4,2.617033355257992e-001)
 ,(41,4,4.412941387983121e-010)
 ,(42,4,2.615675431575638e-001)
 ,(43,4,5.642148483310914e-001)
 ,(44,4,3.874133906205481e-001)
 ,(45,4,1.459760803659328e-001)
 ,(46,4,4.092382222184577e-001)
 ,(47,4,9.663345955299192e-001)
 ,(48,4,4.470419364089041e-001)
 ,(49,4,4.435100834013371e-010)
 ,(50,4,1.097905996191253e-009)
 ,(51,4,1.496287749103286e-010)
 ,(52,4,4.489948869310349e-001)
 ,(53,4,8.889237127270382e-002)
 ,(54,4,1.235889638071877e-001)
 ,(55,4,9.882572242354704e-002)
 ,(56,4,4.245824170637667e-011)
 ,(57,4,3.707357512931592e-001)
 ,(58,4,2.387755141148564e-002)
 ,(59,4,3.221024358770792e-001)
 ,(60,4,6.046846055103539e-002)
 ,(61,4,2.444285419393487e-002)
 ,(62,4,2.741706045603705e-001)
 ,(63,4,2.633755983387675e-001)
 ,(64,4,1.581737939534627e-002)
 ,(65,4,2.635795428795433e-010)
 ,(66,4,2.862825204964961e-010)
 ,(67,4,4.206689337043802e-001)
 ,(68,4,2.207879173689533e-001)
 ,(69,4,6.327385071573180e-002)
 ,(70,4,2.696999529424938e-001)
 ,(71,4,5.798262682240613e-002)
 ,(72,4,3.187292229464344e-001)
 ,(73,4,2.889354796952560e-001)
 ,(74,4,1.144011260802579e-001)
 ,(75,4,5.441389978945060e-001)
 ,(76,4,3.096475469741294e-010)
 ,(77,4,2.272897035444069e-010)
 ,(78,4,9.129192304991648e-001)
 ,(79,4,5.630897734625590e-002)
 ,(80,4,5.955357820871893e-001)
 ,(81,4,2.116925623683708e-001)
 ,(82,4,4.070724747325888e-010)
 ,(83,4,3.594262803234608e-001)
 ,(84,4,1.562023758988295e-001)
 ,(85,4,3.824220400276954e-002)
 ,(86,4,1.420139337513641e-001)
 ,(87,4,3.786033691123785e-001)
 ,(88,4,6.472837146736134e-002)
 ,(89,4,1.877354705635126e-010)
 ,(90,4,1.473723270051685e-010)
 ,(91,4,5.159959337052528e-001)
 ,(92,4,5.558558764874916e-001)
 ,(93,4,6.072786454456352e-001)
 ,(94,4,1.351058823240255e-001)
 ,(95,4,3.527054824559757e-001)
 ,(96,4,1.538117717902734e-001)
 ,(97,4,2.562207673795574e-010)
 ,(98,4,2.649120098676447e-001)
 ,(99,4,2.336596838148598e-010)
 ,(100,4,2.589877347819325e-010)
) AS Source ([UserId],[ClusterId],[Probability])
ON (Target.[ClusterId] = Source.[ClusterId] AND Target.[UserId] = Source.[UserId])
WHEN MATCHED AND (
	NULLIF(Source.[Probability], Target.[Probability]) IS NOT NULL OR NULLIF(Target.[Probability], Source.[Probability]) IS NOT NULL) THEN
 UPDATE SET
  [Probability] = Source.[Probability]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([UserId],[ClusterId],[Probability])
 VALUES(Source.[UserId],Source.[ClusterId],Source.[Probability])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE
;
GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [UserProfile]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[UserProfile] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET NOCOUNT OFF
GO